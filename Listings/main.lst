C51 COMPILER V9.60.7.0   MAIN                                                              07/08/2025 19:14:31 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <REGX51.H>
   2          
   3          void delay_ms(unsigned int ms) {
   4   1          unsigned int i, j;
   5   1          for (i = 0; i < ms; i++)
   6   1              for (j = 0; j < 1275; j++);
   7   1      }
   8          
   9          // 7-segment codes for digits 0–9 (Common Cathode)
  10          unsigned char seg_codes[10] = {
  11              0x3F,  // 0
  12              0x06,  // 1
  13              0x5B,  // 2
  14              0x4F,  // 3
  15              0x66,  // 4
  16              0x6D,  // 5
  17              0x7D,  // 6
  18              0x07,  // 7
  19              0x7F,  // 8
  20              0x6F   // 9
  21          };
  22          
  23          void main() {
  24   1          unsigned char digit = 0;
  25   1      
  26   1          P0 = 0xFF;   // Make P0 input (especially P0.0)
  27   1          P2 = 0x00;   // Initialize display output
  28   1      
  29   1          while (1) {
  30   2              P2 = seg_codes[digit];  // Show current digit
  31   2      
  32   2              if (P0_0 == 0) {        // Button pressed (active LOW)
  33   3                  delay_ms(20);       // Debounce delay
  34   3                  while (P0_0 == 0);  // Wait until button is released
  35   3      
  36   3                  digit++;            // Increment digit
  37   3                  if (digit > 9)
  38   3                      digit = 0;      // Loop back to 0
  39   3      
  40   3                  delay_ms(50);      // Delay to avoid multiple increments
  41   3              }
  42   2          }
  43   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     77    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     10    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.

C51 COMPILER V9.60.7.0   MAIN                                                              07/08/2025 19:14:31 PAGE 2   


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
